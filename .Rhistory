profit <- c( 3.1, 0.1, -1.4, 1.1 )
names(profit) <- c("Q1","Q2","Q3","Q4")
profit
names(profit) <- NULL
profit
profit <- c( "Q1" = 3.1, "Q2" = 0.1, "Q3" = -1.4, "Q4" = 1.1 )
profit
names(profit)
profit["Q1"]
class(profit)
mode(profit)
typeof(profit)
Jennie <- list(gender = female,
company = c("YG", "Odd Atelier"),
group = "Blackpink")
Jennie <- list(gender = "female"),
Jennie <- list(gender = "female",
company = c("YG", "Odd Atelier"),
group = "Blackpink")
Jennie
Jennie$age <- 29
Jennie
Jennie$age
print.Jennie()
print.default(Jennie)
?load
help("load")
??load
help.search("load")
file.choose()
dataset <- c( -15,2,3,4,5,6,7,8,9,12 )
mean(dataset)
median(dataset)
mean(dataset, 0.1)
quantile(dataset, c(.25,.75))
IQR(dataset)
?par
Fibonacci <- c( 1,1,2,3,5,8,13 )
plot(Fibonacci)
plot(Fibbonacci,
Fibonacci
thats some curvy line
plot(Fibonacci,
"Fibonacci"
"that curvy line thing"
plot(Fibonacci,
"Fibonacci",
"that curvy line thing",
"Frequency i guess",
"Fibonacci numbers"
)
plot(Fibonacci,
"Fibonacci",
"that curvy line thing",
"Frequency thing",
"Fibonacci numbers",
)
plot(Fibonacci,
main = "Fibonacci Sequence",
sub = "This is the subtitle",
xlab = "Index of Fibonacci numbers",
ylab = "Fibonacci Value"
)
plot(Fibonacci,
main = "Fibonacci",
sub = "This is the subtitle",
xlab = "Index of Fibonacci numbers",
ylab = "Fibonacci Value"
)
plot(Fibonacci,
"Fibonacci",
"This is the subtitle",
"Index of Fibonacci numbers",
"Fibonacci Value"
)
plot(Fibonacci,
main = "Fibonacci",
sub = "This is the subtitle",
xlab = "Index of Fibonacci numbers",
ylab = "Fibonacci value",
font.main = 2,
col.main = "red",
cex.main = 1.2,
family = "mono"
)
Fibonacci <- c( 1,1,2,3,5,8,13 )
plot(Fibonacci)
plot(Fibonacci,
type = "S")
plot(Fibonacci
type = "s")
plot(Fibonacci,
type = "s")
plot(Fibonacci,
type = "b")
plot(Fibonacci,
type = "b",
pch = 11)
plot(Fibonacci,
type = "b",
pch = 11
lty = 4,
plot(Fibonacci,
type = "b",
pch = 11,
lty=4,
lwd=2)
install.packages("tidyverse")
library(tidyverse)
setwd("C:/Users/xinye/seadrive_root/xinyeahh/My Libraries/temp_independent study file/Practice Projects/R/sea surface temperature anomalies")
dir()
cmems_mod_glo_phy_anfc_0.083deg-sst-anomaly_P1D-m_1748933327815.nc
# Bounding box for Southeast Asia
lon_min <- 90
lon_max <- 125
lat_min <- -10
lat_max <- 20
install.packages(c("ncdf4", "raster", "tidyverse"))
library(ncdf4)
# Load NetCDF file
nc <- nc_open("data/cmems_mod_glo_phy_anfc_0.083deg-sst-anomaly_P1D-m_1748933327815.nc")
# Load NetCDF file
nc <- nc.open("data/cmems_mod_glo_phy_anfc_0.083deg-sst-anomaly_P1D-m_1748933327815.nc")
install.packages("ncdf4")
library(ncdf4)
# Load NetCDF file
nc <- nc_open("data/cmems_mod_glo_phy_anfc_0.083deg-sst-anomaly_P1D-m_1748933327815.nc")
dir("data/")
# Load NetCDF file
> nc <- nc.open("data/cmems_mod_glo_phy_anfc_0.083deg-sst-anomaly_P1D-m_1748933327815.nc")
# Load NetCDF file
nc <- nc.open("data/cmems_mod_glo_phy_anfc_0.083deg-sst-anomaly_P1D-m_1748933327815.nc")
# Load NetCDF file
nc <- nc_open("data/cmems_mod_glo_phy_anfc_0.083deg-sst-anomaly_P1D-m_1748933327815.nc")
# Optional: look at specific variable
sst_var <- ncvar_get(nc, "thetao_anomaly")
# Close the file when done
nc_close(nc)
print(nc)
source("~/.active-rstudio-document")
library(ncdf4)
nc <- nc_open("cmems_mod_glo_phy_anfc_0.083deg-sst-anomaly_P1D-m_1748935156905.nc")
library(ncdf4)
nc <- nc_open("cmems_mod_glo_phy_anfc_0.083deg-sst-anomaly_P1D-m_1748935156905.nc")
library(ncdf4)
nc <- nc_open("cmems_mod_glo_phy_anfc_0.083deg-sst-anomaly_P1D-m_1748935156905.nc")
dir()
setwd("C:/Users/xinye/seadrive_root/xinyeahh/My Libraries/temp_independent study file/Practice Projects/R/sea surface temperature anomalies/data")
library(ncdf4)
nc <- nc_open("cmems_mod_glo_phy_anfc_0.083deg-sst-anomaly_P1D-m_1748935156905.nc")
# List all variables
print(nc$var)
# Extract sea surface temperature anomaly variable
sst <- ncvar_get(nc, "sea_surface_temperature_anomaly")
# Get dimensions (time, lat, lon)
time <- ncvar_get(nc, "time")
lat <- ncvar_get(nc, "latitude")
lon <- ncvar_get(nc, "longitude")
# Close the file when done
nc_close(nc)
nc <- nc_open("your_file.nc")
nc <- nc_open("cmems_mod_glo_phy_anfc_0.083deg-sst-anomaly_P1D-m_1748935156905.nc")
nc$dim$time$units
# adjust dimension order as needed
daily_max <- apply(sst, 3, max, na.rm = TRUE)
# Combine with dates (convert time units appropriately)
# adjust origin if needed
dates <- as.Date(time, origin = "1970-01-01")
df <- data.frame(date = dates, max_sst_anomaly = daily_max)
# Write to CSV
write.csv(df, "daily_max_sst_anomaly_r.csv", row.names = FALSE)
# Step 1: Get daily max values over the grid
daily_max <- apply(sst, 3, max, na.rm = TRUE)
# Step 2: Convert NetCDF time (in seconds since 1970-01-01)
time_vals <- ncvar_get(nc, "time")
time_converted <- as.POSIXct(time_vals, origin = "1970-01-01", tz = "UTC")
dates <- as.Date(time_converted)
# Step 3: Combine and export
df <- data.frame(date = dates, max_sst_anomaly = daily_max)
# Step 4: Write to CSV
write.csv(df, "daily_max_sst_anomaly_r.csv", row.names = FALSE)
# Step 1: Get daily max values over the grid
daily_max <- apply(sst, 3, max, na.rm = TRUE)
# Step 2: Convert NetCDF time (in seconds since 1970-01-01)
time_vals <- ncvar_get(nc, "time")
time_converted <- as.POSIXct(time_vals, origin = "1970-01-01", tz = "UTC")
dates <- as.Date(time_converted)
# Step 3: Combine and export
df <- data.frame(date = dates, max_sst_anomaly = daily_max)
# Step 4: Write to CSV
write.csv(df, "daily_max_sst_anomaly_r.csv", row.names = FALSE)
library(ggplot2)
ggplot(df, aes(x = date, y = max_sst_anomaly)) +
geom_line() +
geom_point() +
labs(title = "Daily Maximum Sea Surface Temperature Anomaly",
x = "Date",
y = "Max SST Anomaly (Â°C)") +
theme_minimal()
